@page
@model JSMatchingGame.Pages.matchingGameJQueryModel
@{
}
<div class="row align-items-center bg-dark text-white p-3 rounded mb-4">
    <div class="col-md-2 text-start">
        <button class="btn btn-light w-100" id="btnStart">Start</button>
    </div>

    <div class="col-md-4 text-center">
        <div id="msg" class="bg-info text-dark py-2 px-3 rounded shadow-sm">
            Press Start to begin
        </div>
    </div>

    <div class="col-md-6 text-end">
        <div class="d-flex justify-content-end gap-4">
            <div><strong>Score Player 1:</strong> <span id="score1">0</span></div>
            <div><strong>Score Player 2:</strong> <span id="score2">0</span></div>
        </div>
    </div>
</div>
<div class="row table-responsive">

    <table class="table">
        <tr>
            <td>
                <button class="blueCard" id="m1"></button>
            </td>
            <td>
                <button class="blueCard" id="m2"></button>
            </td>
            <td>
                <button class="blueCard" id="m3"></button>
            </td>
            <td>
                <button class="blueCard" id="m4"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="blueCard" id="m5"></button>
            </td>
            <td>
                <button class="blueCard" id="m6"></button>
            </td>
            <td>
                <button class="blueCard" id="m7"></button>
            </td>
            <td>
                <button class="blueCard" id="m8"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="pinkCard" id="m9"></button>
            </td>
            <td>
                <button class="pinkCard" id="m10"></button>
            </td>
            <td>
                <button class="pinkCard" id="m11"></button>
            </td>
            <td>
                <button class="pinkCard" id="m12"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="pinkCard" id="m13"></button>
            </td>
            <td>
                <button class="pinkCard" id="m14"></button>
            </td>
            <td>
                <button class="pinkCard" id="m15"></button>
            </td>
            <td>
                <button class="pinkCard" id="m16"></button>
            </td>
        </tr>
    </table>
</div>
@section Scripts {
    <script>
        $("#btnStart").click(startGame);
        let player1 = "player1";
        let player2 = "player2";
        let currentTurn = player1;
        let gameOver = false;
        let msg;
        let allBlueCards;
        let allPinkCards;
        let shuffle;
        let CardNamesPink;
        let CardNamesBlue;
        let selectedBlueCard = null;
        let selectedPinkCard = null;
        let ScorePlayer1 = 0;
        let ScorePlayer2 = 0;
        let winner = null;

        $(document).ready(function () {
            msg = $("#msg")[0];
            allBlueCards = $(".blueCard").toArray();
            allPinkCards = $(".pinkCard").toArray();
            CardNamesPink = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];
            CardNamesBlue = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
            shuffle = (array) => { return array.sort(() => Math.random() - 0.5); };
            $(allBlueCards).click(doTakeTurn);
            $(allPinkCards).click(doTakeTurn);

        });

        function startGame() {
            //shuffle the "pictures" and apply them to the cards
            shuffle(CardNamesPink);
            //console.log(CardNamesPink);
            shuffle(CardNamesBlue);
            //console.log(CardNamesBlue);
            for (let i = 0; i < 8; i++) {
                allBlueCards[i].textContent = CardNamesBlue[i];
                allPinkCards[i].textContent = CardNamesPink[i];
                allBlueCards[i].style.color = "lightblue";
                allPinkCards[i].style.color = "lightpink";
                allPinkCards[i].disabled = false;
                allBlueCards[i].disabled = false;
            }
            ScorePlayer1 = 0;
            ScorePlayer2 = 0;
            $("#score2").text(ScorePlayer2);
            $("#score1").text(ScorePlayer1);
            $(allBlueCards).css("backgroundColor", "lightblue");
            $(allPinkCards).css("backgroundColor", "lightpink");
            selectedBlueCard = null;
            selectedPinkCard = null;
            winner = null;
            gameOver = false;
            currentTurn = player1;
            gameStatusmsg();
        };

        function doTakeTurn(event) {
            const btn = event.target;
            if (btn.disabled == false) {
                TakeTurn(btn);
            }

        }

        function TakeTurn(btn) {
            if ($(btn).hasClass("blueCard")) {
                if (selectedBlueCard !== null) {
                    return;
                }
                selectedBlueCard = btn;
                $(btn).css("color", "white");
                console.log(selectedBlueCard);

            }
            if ($(btn).hasClass("pinkCard")) {
                if (selectedPinkCard !== null) {
                    return;
                }
                selectedPinkCard = btn;
                $(btn).css("color", "white");
                console.log(selectedPinkCard);
            }
            if (selectedBlueCard !== null && selectedPinkCard != null) {
                setTimeout(() => {
                    checkMatch();
                    switchTurn();
                }, 1000
                )
            }
        }

        function switchTurn() {
            if (!gameOver) {
                if (selectedBlueCard !== null && selectedPinkCard !== null) {
                    currentTurn = currentTurn == player1 ? player2 : player1;
                    selectedBlueCard = null;
                    selectedPinkCard = null;
                    gameStatusmsg();
                }
            }
        }
        function checkMatch() {
            if (selectedBlueCard !== null && selectedPinkCard !== null) {
                if (selectedBlueCard.textContent == selectedPinkCard.textContent) {
                    if (currentTurn == player1) {
                        ScorePlayer1++
                        $("#score1").text(ScorePlayer1);
                    }
                    else if (currentTurn == player2) {
                        ScorePlayer2++
                        $("#score2").text(ScorePlayer2);
                    }
                    selectedBlueCard.disabled = true;
                    selectedPinkCard.disabled = true;
                    checkGameOver();
                }
                else {
                    $(selectedBlueCard).css("color", "lightblue");
                    $(selectedPinkCard).css("color", "lightpink");
                }
            }
        }
        function gameStatusmsg() {
            if (gameOver == false) {
                $(msg).text("Current Turn: " + currentTurn);
            }
            else if (gameOver == true) {
                $(msg) .text("Game over! Winner is: " + winner);
            }
        }
        function checkGameOver() {
            if (allBlueCards.every(c => c.disabled) && allPinkCards.every(c => c.disabled)) {
                gameOver = true;
                checkWinnerTie();
                gameStatusmsg();
                $(allBlueCards).css("backgroundColor", "grey");
                $(allPinkCards).css("backgroundColor", "grey");
            }
        }
        function checkWinnerTie() {
            if (ScorePlayer1 > ScorePlayer2) {
                winner = player1;
            }
            else if (ScorePlayer1 < ScorePlayer2) {
                winner = player2;
            }
            else {
                winner = "Tie"
            }
        }
    </script>
}

